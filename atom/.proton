{
  ;; Everything that is not set up through this file will get wiped on start

  ;; layers - get more at github.com/dvcrn/proton/tree/master/src/cljs/proton/layers
  :layers [
    ;; core layer. Don't remove.
    :core

    ;; config-files
    :config-files/docker

    ;; tools
    :tools/git
    :tools/minimap
    :tools/linter

    ;; languages
    :lang/clojure
    :lang/css
    :lang/elixir
    :lang/go
    :lang/handlebars
    :lang/haskell
    :lang/html
    :lang/jade
    :lang/javascript
    :lang/json
    :lang/markdown
    :lang/python
  ]

  ;; Packages that are not part of a layer.
  :additional-packages [
    :sublime-style-column-selection
    :minimap-git-diff
    :minimap-highlight-selected
    :tree-view-git-status
    :language-erlang
    :autocomplete-erlang
    :hyperclick
    :go-signature-statusbar
  ]

  ;; Bundled packages will be disabled, the others will be removed.
  :disabled-packages [
    :emmet
    :environment
    :go-config
    :go-get
    :gorename
    :gometalinter-linter
    :linter-jade
  ]

  ;; Configurations are denoted as 2 element vector consisting of k/v
  ;; sub-vectors inside v will get treated like javascript arrays
  :configuration
  [
    ;; atom
    ["projectHome" "/Users/thibault/github"]

    ;; editor
    ["editor.fontFamily" "Hack"]
    ["editor.fontSize" 11]
    ["editor.preferredLineLength" 100]
    ["editor.showInvisibles" true]
    ["editor.softWrap" true]
    ["editor.tabLength" 4]

    ;; core
    ["core.themes" ["nucleus-dark-ui" "atom-dark-fusion-syntax"]]
    ["core.useCustomTitleBar" true]
    ["core.projectHome" "/Users/thibault/github"]

    ;; proton
    ["proton.core.showTabBar" true]
    ["proton.core.relativeLineNumbers" false]
    ["proton.core.inputProvider" :vim-mode-plus]

    ;; project-plus
    ["project-plus.projectHome" "/Users/thibault/github"]
    ["project-plus.showPath" true]
    ["project-plus.notifications" false]

    ;; file-icon
    ["file-icons.coloured" false]
    ["file-icons.onChanges" true]

    ;; vim-mode-plus
    ["vim-mode-plus.highlightSearch" true]
    ["vim-mode-plus.statusBarModeStringStyle" "long"]

    ;; minimap
    ["minimap.plugins.git-diff" true]
    ["minimap.plugins.highlight-selected" true]

    ;; autocomplete
    ["autocomplete-python.useKite" false]

    ;; erlang & elixir
    ["autocomplete-erlang.elixirPath" "/usr/local/bin/elixir"]
    ["autocomplete-erlang.erlangHome" "/usr/local/bin"]

    ;; tree-view
    ["tree-view.alwaysOpenExisting" true]
    ["tree-view.autoReveal" true]
    ["tree-view.focusOnReveal" false]
    ["tree-view.squashDirectoryNames" true]

    ;; pigments
    ["pigments.notifyReloads" false]

    ;; python linter
    ["linter.showErrorInline" false]
    ["linter.underlineIssues" false]
    ["linter-flake8.maxLineLength" 100]
    ["linter-flake8.ignoreErrorCodes" ["D100" "D103" "E501"]] 
  ]
  ;; custom keybindings
  :keybindings {
    :p {:category "project"
        :y {:title "copy project path"
            :action "editor:copy-project-path",
            :target ".editor.is-focused"}
       }
    :f {:category "files"
        :t {:title "reveal in tree view"
            :action "tree-view:reveal-active-file",
            :target ".editor.is-focused"}
       }
  }

  ;; custom behavior inside a certain window
  :keymaps [
    ;; use "j k" to activate normal mode (or "ctrl c")
    {:selector "atom-text-editor.vim-mode-plus:not(.normal-mode)" :keymap [["j k" "vim-mode-plus:activate-normal-mode"]]}

    ;; ESC cancel autocompletion (rather then activating normal-mode) if autocompletion is active && in insert-mode
    {:selector "atom-text-editor.vim-mode-plus.insert-mode.autocomplete-active" :keymap [["escape" "autocomplete-plus:cancel"]]}
  ]

}
